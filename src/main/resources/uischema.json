{
  "id": "org.wso2.carbon.inbound.cdc.CDCPollingConsumer",
  "name": "debeziumInbound",
  "type": "event-integration",
  "title": "Debezium CDC",
  "additionalParameters": "true",
  "help": "Configure Debezium to capture change events from the specified database.",
  "elements": [
    {
      "type": "attributeGroup",
      "value": {
        "groupName": "Generic",
        "elements": [
          {
            "type": "attribute",
            "value": {
              "name": "name",
              "displayName": "Event Integration Name",
              "inputType": "string",
              "required": "true",
              "helpTip": "Unique identifier for the CDC event integration."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "class",
              "displayName": "Class Name",
              "inputType": "string",
              "required": "true",
              "hidden": true,
              "defaultValue": "org.wso2.carbon.inbound.cdc.CDCPollingConsumer"
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "generateSequences",
              "displayName": "Automatically generate sequences",
              "inputType": "checkbox",
              "defaultValue": true
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "sequence",
              "displayName": "Injecting Sequence Name",
              "inputType": "keyOrExpression",
              "keyType": "sequence",
              "required": "true",
              "enableCondition": [{"generateSequences":false}],
              "helpTip": "Sequence to inject the CDC message"
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "onError",
              "displayName": "Error Sequence Name",
              "inputType": "keyOrExpression",
              "keyType": "sequence",
              "required": "true",
              "enableCondition": [{"generateSequences":false}],
              "helpTip": "Error sequence to invoke on fault"
            }
          }
        ]
      }
    },
    {
      "type": "attributeGroup",
      "value": {
        "groupName": "Inbound Functional",
        "elements": [
          {
            "type": "attribute",
            "value": {
              "name": "interval",
              "displayName": "Polling interval",
              "inputType": "string",
              "required": "true",
              "helpTip": "The polling interval for the CDC inbound endpoint."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "sequential",
              "displayName": "Execute sequentially",
              "inputType": "checkbox",
              "defaultValue": true,
              "required": "false",
              "helpTip": "The behavior when executing the given sequence."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "coordination",
              "displayName": "Coordination",
              "inputType": "checkbox",
              "defaultValue": true,
              "required": "false",
              "helpTip": "In a clustered setup, this will run the inbound only in a single worker node."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "suspend",
              "displayName": "Suspend Inbound",
              "inputType": "checkbox",
              "defaultValue": false,
              "hidden": false,
              "required": "false",
              "helpTip": "Enable this option to suspend the inbound endpoint immediately after deployment."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "preserve.event",
              "displayName": "Preserve Event",
              "inputType": "checkbox",
              "defaultValue": false,
              "required": "false",
              "helpTip": "Enable this to preserve the original event payload."
            }
          }
        ]
      }
    },
    {
      "type": "attributeGroup",
      "value": {
        "groupName": "CDC Basic",
        "elements": [
          {
            "type": "attribute",
            "value": {
              "name": "snapshot.mode",
              "displayName": "Snapshot Mode",
              "inputType": "combo",
              "required": "true",
              "comboValues": [
                "always",
                "initial",
                "initial_only",
                "schema_only",
                "no_data",
                "recovery",
                "when_needed",
                "configuration_based",
                "custom"
              ],
              "defaultValue": "initial",
              "helpTip": "Specifies the criteria for running a snapshot when the connector starts."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "connector.class",
              "displayName": "Connector Class",
              "inputType": "string",
              "required": "true",
              "defaultValue": "io.debezium.connector.mysql.MySqlConnector",
              "helpTip": "The name of the Java class for the connector."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "database.hostname",
              "displayName": "Database Hostname",
              "inputType": "string",
              "required": "true",
              "helpTip": "IP address or hostname of the database server."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "database.port",
              "displayName": "Database Port",
              "inputType": "string",
              "required": "true",
              "helpTip": "Port number (Integer) of the database server."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "database.user",
              "displayName": "Database User",
              "inputType": "string",
              "required": "true",
              "helpTip": "Name of the database user to use when connecting to the database server."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "database.password",
              "displayName": "Database Password",
              "inputType": "string",
              "required": "true",
              "helpTip": "The password to connect to the database."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "database.dbname",
              "displayName": "Database Name",
              "inputType": "string",
              "required": "true",
              "helpTip": "The name of the database that needs to be listened to."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "database.instance",
              "displayName": "Database Instance",
              "inputType": "string",
              "required": "false",
              "helpTip": "Specifies the instance name of the SQL Server named instance.",
              "enableCondition": [{"connector.class": "io.debezium.connector.sqlserver.SqlServerConnector"}]
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "database.names",
              "displayName": "Database Names",
              "inputType": "string",
              "required": "false",
              "helpTip": "The comma-separated list of the SQL Server database names from which to stream the changes.",
              "enableCondition": [{"connector.class": "io.debezium.connector.sqlserver.SqlServerConnector"}]
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "database.server.id",
              "displayName": "Database Server ID",
              "inputType": "string",
              "required": "false",
              "helpTip": "A unique numeric ID for this database client across all active database processes in the cluster.",
              "enableCondition": ["OR", {"connector.class": "io.debezium.connector.mysql.MySqlConnector"}, {"connector.class": "io.debezium.connector.mariadb.MariaDbConnector"}]
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "table.include.list",
              "displayName": "Table Include List",
              "inputType": "string",
              "required": "false",
              "helpTip": "Comma-separated list of tables for which changes need to be captured."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "allowed.operations",
              "displayName": "Allowed Operations",
              "inputType": "string",
              "required": "false",
              "helpTip": "Comma separated values. Ex: create, update, delete, truncate."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "connector.name",
              "displayName": "Connector Name",
              "inputType": "string",
              "required": "false",
              "helpTip": "Unique name for the Debezium connector instance. The inbound endpoint name is used as default."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "topic.prefix",
              "displayName": "Topic Prefix",
              "inputType": "string",
              "required": "false",
              "helpTip": "The prefix, used for all Kafka topic names, must be unique across all connectors."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "schema.history.internal",
              "displayName": "Schema History Internal",
              "inputType": "string",
              "required": "false",
              "helpTip": "The Java class that persists the database schema history."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "schema.history.internal.file.filename",
              "displayName": "Schema History Internal File Filename",
              "inputType": "string",
              "required": "false",
              "helpTip": "Specify the file path where the database schema history is stored.",
              "enableCondition": [{"schema.history.internal": "io.debezium.storage.file.history.FileSchemaHistory"}]
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "schema.history.internal.kafka.topic",
              "displayName": "Schema History Internal Kafka Topic",
              "inputType": "string",
              "required": "false",
              "helpTip": "The Kafka topic storing the database schema history.",
              "enableCondition": [{"schema.history.internal": "io.debezium.storage.kafka.history.KafkaSchemaHistory"}]
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "schema.history.internal.kafka.bootstrap.servers",
              "displayName": "Schema History Internal Kafka Bootstrap Servers",
              "inputType": "string",
              "required": "false",
              "helpTip": "The initial list of Kafka cluster servers to connect.",
              "enableCondition": [{"schema.history.internal": "io.debezium.storage.kafka.history.KafkaSchemaHistory"}]
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "offset.storage",
              "displayName": "Offset Storage",
              "inputType": "string",
              "required": "false",
              "helpTip": "The Java class that persists connector offsets."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "offset.storage.file.filename",
              "displayName": "Offset Storage File Filename",
              "inputType": "string",
              "required": "false",
              "helpTip": "Path to file where offsets are to be stored.",
              "enableCondition": [{"offset.storage": "org.apache.kafka.connect.storage.FileOffsetBackingStore"}]
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "offset.storage.topic",
              "displayName": "Offset Storage Topic",
              "inputType": "string",
              "required": "false",
              "helpTip": "The Kafka topic where offsets are stored.",
              "enableCondition": [{"offset.storage": "org.apache.kafka.connect.storage.KafkaOffsetBackingStore"}]
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "offset.storage.partitions",
              "displayName": "Offset Storage Partitions",
              "inputType": "string",
              "required": "false",
              "helpTip": "The number of partitions for the offset storage topic.",
              "enableCondition": [{"offset.storage": "org.apache.kafka.connect.storage.KafkaOffsetBackingStore"}]
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "offset.storage.replication.factor",
              "displayName": "Offset Storage Replication Factor",
              "inputType": "string",
              "required": "false",
              "helpTip": "The replication factor for the offset storage topic.",
              "enableCondition": [{"offset.storage": "org.apache.kafka.connect.storage.KafkaOffsetBackingStore"}]
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "database.out.server.name",
              "displayName": "Database Out Server Name",
              "inputType": "string",
              "required": "false",
              "helpTip": "The name of the XStream outbound server configured in the database.",
              "enableCondition": [{"connector.class": "io.debezium.connector.oracle.OracleConnector"}]
            }
          }
        ]
      }
    }
  ]
}
